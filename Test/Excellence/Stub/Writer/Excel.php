<?php
/**
 * @author		  Ronald Marske <r.marske@secu-ring.de>
 * @filesource    Test/Excellence/Stub/Writer/Excel.php
 *
 * @copyright     Copyright (c) 2013 Ronald Marske, All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in
 *       the documentation and/or other materials provided with the
 *       distribution.
 *
 *     * Neither the name of Ronald Marske nor the names of his
 *       contributors may be used to endorse or promote products derived
 *       from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
 * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
 * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
 * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
 * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

namespace Test\Excellence\Stub\Writer;

use Excellence\Sheet;
use Excellence\Writer\Excel as ExcelWriter;

class Excel extends ExcelWriter {

	public function checkNumberOfSheetsInWorkbook() {
		return parent::checkNumberOfSheetsInWorkbook(); // TODO: Change the autogenerated stub
	}

	public function createSheetXml() {
		return parent::createSheetXml(); // TODO: Change the autogenerated stub
	}

	public function getNumberOfSheets() {
		return parent::getNumberOfSheets(); // TODO: Change the autogenerated stub
	}

	public function createSheetDataXml(Sheet $oSheet, $iSheet) {
		parent::createSheetDataXml($oSheet, $iSheet); // TODO: Change the autogenerated stub
	}

	public function addValueToSharedStrings($value) {
		return parent::addValueToSharedStrings($value); // TODO: Change the autogenerated stub
	}

	public function documentRelationsXml() {
		return parent::documentRelationsXml(); // TODO: Change the autogenerated stub
	}

	public function documentContentTypesXml() {
		return parent::documentContentTypesXml(); // TODO: Change the autogenerated stub
	}

	public function workbookAppXml() {
		return parent::workbookAppXml(); // TODO: Change the autogenerated stub
	}

	public function workbookCoreXml() {
		return parent::workbookCoreXml(); // TODO: Change the autogenerated stub
	}

	public function workbookRelationsXml() {
		return parent::workbookRelationsXml(); // TODO: Change the autogenerated stub
	}

	public function workbookStylesXML() {
		return parent::workbookStylesXML(); // TODO: Change the autogenerated stub
	}

	public function sharedStringsXml() {
		return parent::sharedStringsXml(); // TODO: Change the autogenerated stub
	}

	public function addHyperlink(Sheet &$oSheet, $value) {
		return parent::addHyperlink($oSheet, $value); // TODO: Change the autogenerated stub
	}

	public function hasHyperlinks(Sheet &$oSheet) {
		return parent::hasHyperlinks($oSheet); // TODO: Change the autogenerated stub
	}

	public function worksheetRelationsXml(Sheet &$oSheet) {
		return parent::worksheetRelationsXml($oSheet); // TODO: Change the autogenerated stub
	}


}